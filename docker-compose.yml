version: '3.4'

services:
  loginservice:
    image: ${DOCKER_REGISTRY-}loginservice
    build:
      context: .
      dockerfile: ./MassTransit.Login.LoginService/Dockerfile
    depends_on:
      - zookeeper
      - kafkabroker
      - kafka-ui
      - init-kafka
      - masstransitclient

  accountorchservice:
    image: ${DOCKER_REGISTRY-}accountorchservice
    build:
      context: .
      dockerfile: ./MassTransit.Orchestrator/Dockerfile
    depends_on:
      - zookeeper
      - kafkabroker
      - kafka-ui
      - init-kafka
      - loginservice

  accountservice:
    image: ${DOCKER_REGISTRY-}accountservice
    build:
      context: .
      dockerfile: ./MassTransit.Account.AccountService/Dockerfile
    depends_on:
      - zookeeper
      - kafkabroker
      - kafka-ui
      - init-kafka
      - loginservice

  chatservice:
    image: ${DOCKER_REGISTRY-}chatservice
    build:
      context: .
      dockerfile: ./MassTransit.Chat.MessagesService/Dockerfile
    depends_on:
      - zookeeper
      - kafkabroker
      - kafka-ui
      - init-kafka
      - masstransitcouchbase

  signalrhub:
    image: ${DOCKER_REGISTRY-}signalrhub
    ports:
      - "5002:80"
    build:
      context: .
      dockerfile: ./MassTransit.SignalR.SignalRService/Dockerfile

  bffservice:
    image: ${DOCKER_REGISTRY-}bffservice
    build:
      context: .
      dockerfile: ./MassTransit.BFFServices.SignalRWorker/Dockerfile
    depends_on:
      - zookeeper
      - kafkabroker
      - kafka-ui
      - init-kafka
      - signalrhub

  masstransitclient:
    image: ${DOCKER_REGISTRY-}masstransitclient
    build:
      context: .
      dockerfile: ./masstransit-client-app/Dockerfile
    ports:
      - "80:80"

  masstransitapiauth:
    image: ${DOCKER_REGISTRY-}masstransitapiauth
    ports:
      - "5058:80"
    build:
      context: .
      dockerfile: ./Masstransit.Api.Auth/Dockerfile

  masstransitdb:
    image: ${DOCKER_REGISTRY-}masstransitdb
    ports:
      - "1433:1433"
    build:
      context: ./SQL
      dockerfile: Dockerfile

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    depends_on:
      - rabbitmq
  
  kafkabroker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafkabroker
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafkabroker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      - rabbitmq 
      - zookeeper

  init-kafka:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - kafkabroker
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafkabroker:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafkabroker:29092 --create --if-not-exists --topic masstransitarch-register-account --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafkabroker:29092 --create --if-not-exists --topic masstransitarch-login-createlogin --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafkabroker:29092 --create --if-not-exists --topic masstransitarch-login-logincreated --replication-factor 1 --partitions 1      
      kafka-topics --bootstrap-server kafkabroker:29092 --create --if-not-exists --topic masstransitarch-account-createaccount --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafkabroker:29092 --create --if-not-exists --topic masstransitarch-account-accountcreated --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafkabroker:29092 --create --if-not-exists --topic masstransitarch-login-getlogin --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafkabroker:29092 --create --if-not-exists --topic masstransitarch-account-getaccount --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafkabroker:29092 --create --if-not-exists --topic masstransitarch-account-registered --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafkabroker:29092 --create --if-not-exists --topic masstransitarch-login-loginresponse --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafkabroker:29092 --create --if-not-exists --topic masstransitarch-login-loginrequest --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafkabroker:29092 --create --if-not-exists --topic masstransitarch-login-loginauthresponse --replication-factor 1 --partitions 1      
      kafka-topics --bootstrap-server kafkabroker:29092 --create --if-not-exists --topic masstransitarch-auth-tokenrequest --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafkabroker:29092 --create --if-not-exists --topic masstransitarch-auth-tokenresponse --replication-factor 1 --partitions 1      
      kafka-topics --bootstrap-server kafkabroker:29092 --create --if-not-exists --topic masstransitarch-login-nologin --replication-factor 1 --partitions 1  
      kafka-topics --bootstrap-server kafkabroker:29092 --create --if-not-exists --topic masstransitarch-login-loginauthresponse --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:kafkabroker --list
      "    

  rabbitmq:
    container_name: 'masstransit-rabbit-queue'
    image: rabbitmq:3.10.5-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=p@ssword123
    ports:
      - '5672:5672'
      - '15672:15672'
      
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: "kafka-ui"
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=kafkabroker
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafkabroker:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - rabbitmq 
      - zookeeper
      - kafkabroker

  masstransitcouchbase:
    image: ${DOCKER_REGISTRY-}masstransitcouchbasecouchbase
    build:
      context: ./Couchbase
      dockerfile: Dockerfile
    ports:
      - 8091:8091
      - 8092:8092
      - 8093:8093
      - 11210:11210
    depends_on:
      - zookeeper
      - kafkabroker

  masstransitseq:
    image: ${DOCKER_REGISTRY-}datalust/seq
    environment:
      - ACCEPT_EULA=Y
    volumes:
      - /path/to/seq/data:/data
    ports:
      - 5341:5341
      - 5059:80
