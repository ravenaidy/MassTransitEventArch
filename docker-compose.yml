version: '3.4'

services:
  loginservice:
    image: ${DOCKER_REGISTRY-}loginservice        
    build:
      context: .
      dockerfile: ./MassTransit.Login.LoginService/Dockerfile
    depends_on:
      - accountorchservice
      - masstransitdb
      - zookeeper
      - kafkabroker     
      - kafka-ui
      - init-kafka
      
  accountorchservice:
    image: ${DOCKER_REGISTRY-}accountorchservice
    build:
      context: .
      dockerfile: ./MassTransit.AccountOrchestrator/Dockerfile
    depends_on:
      - masstransitdb
      - zookeeper
      - kafkabroker
      - kafka-ui
      - init-kafka
        
  MassTransitApi:
    image: ${DOCKER_REGISTRY-}masstransitapi
    ports:
      - "5000:80"      
    build:
      context: .
      dockerfile: ./MassTransitApi/Dockerfile
    depends_on:      
      - masstransitdb
      - zookeeper
      - kafkabroker
      - kafka-ui
      - init-kafka
      - loginservice
      
  masstransitdb:
    image: ${DOCKER_REGISTRY-}masstransitdb
    ports:
      - "1433:1433"
    build:
      context: ./SQL
      dockerfile: Dockerfile
  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      
  kafkabroker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafkabroker
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafkabroker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
        
  init-kafka:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - kafkabroker
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafkabroker:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafkabroker:29092 --create --if-not-exists --topic masstransitarch-register-account --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafkabroker:29092 --create --if-not-exists --topic masstransitarch-login-createlogin --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafkabroker:29092 --create --if-not-exists --topic masstransitarch-login-logincreated --replication-factor 1 --partitions 1      

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:kafkabroker --list
      "
      
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: "kafka-ui"
    ports:
      - "8080:8080"
    environment:      
      - KAFKA_CLUSTERS_0_NAME=kafkabroker
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafkabroker:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - zookeeper
      - kafkabroker 